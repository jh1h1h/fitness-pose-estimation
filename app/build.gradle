
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'
//apply plugin: 'kotlin-android-extensions'

android {
    compileSdk 34

    defaultConfig {
        applicationId "com.teamten.visionfit"
        minSdkVersion 21
        multiDexEnabled true
        targetSdkVersion 34

        versionCode 11
        versionName "1.11"
        vectorDrawables.useSupportLibrary = true
        setProperty("archivesBaseName", "VisionFit")
    }
    buildTypes {
        proguard {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguard.cfg'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            isDefault true
            minifyEnabled false
            proguardFiles 'proguard-rules.pro'
        }
        testBuildType "debug"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    // Do NOT compress tflite model files (need to call out to developers!)
    namespace 'com.teamten.visionfit'
    buildFeatures {
        viewBinding true
        buildConfig true
    }
    androidResources {
        noCompress 'tflite'
    }
}

repositories {
    // Depending on AndroidX Snapshot Builds to get the latest CameraX libs.
    maven { url 'https://androidx.dev/snapshots/builds/6787662/artifacts/repository/' }

}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation platform('com.google.firebase:firebase-bom:32.7.3')
    // Declare the dependency for the Cloud Firestore library
    implementation("com.google.firebase:firebase-firestore:24.10.3")
    // Pose detection with default models
    implementation 'com.google.mlkit:pose-detection:18.0.0-beta3'
    // Pose detection with accurate models
    implementation 'com.google.mlkit:pose-detection-accurate:18.0.0-beta3'
    // -------------------------------------------------------
    implementation 'com.google.auth:google-auth-library-oauth2-http:0.1.0'


    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.google.guava:guava:27.1-android'
    implementation 'com.google.firebase:firebase-auth:22.3.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.navigation:navigation-fragment:2.6.0'
    implementation 'androidx.navigation:navigation-ui:2.6.0'
    implementation 'androidx.activity:activity:1.8.0'

    // For how to setup gradle dependencies in Android X, see:
    // https://developer.android.com/training/testing/set-up-project#gradle-dependencies
    // Core library
    androidTestImplementation 'androidx.test:core:1.4.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    implementation 'com.daimajia.easing:library:2.0@aar'
    implementation 'com.daimajia.androidanimations:library:2.3@aar'
    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-livedata:2.3.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel:2.3.1"

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.annotation:annotation:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    // CameraX
    implementation "androidx.camera:camera-camera2:1.0.0-SNAPSHOT"
    implementation "androidx.camera:camera-lifecycle:1.0.0-SNAPSHOT"
    implementation "androidx.camera:camera-view:1.0.0-SNAPSHOT"

    // On Device Machine Learnings
    implementation "com.google.android.odml:image:1.0.0-beta1"
}


configurations {
    // Resolves dependency conflict caused by some dependencies use
    // com.google.guava:guava and com.google.guava:listenablefuture together.
    all*.exclude group: 'com.google.guava', module: 'listenablefuture'
}
